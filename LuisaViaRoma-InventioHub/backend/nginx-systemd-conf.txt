server {
	listen 80;
	server_name test.lvr.inventiohub.com;
	return 301 https://$host$request_uri;
}

server {
	listen 80;
	server_name localhost;
	location /api/ {
		include uwsgi_params;
		uwsgi_pass unix:/opt/uwsgi/lvr.sock;
	}
}

server {
	listen 443 ssl;
	server_name test.lvr.inventiohub.com;

	ssl_certificate /etc/letsencrypt/live/test.lvr.inventiohub.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/test.lvr.inventiohub.com/privkey.pem;

	# Higher-priority block for admin and api
	location ^~ /admin/ {
		include uwsgi_params;
		uwsgi_pass unix:/opt/uwsgi/lvr.sock;
	}

	location ^~ /api/ {
		include uwsgi_params;
		uwsgi_pass unix:/opt/uwsgi/lvr.sock;
	}

	# Static files
	location /static/ {
		alias /usr/share/nginx/html/staticfiles/;
	}

	location / {
		root /usr/share/nginx/html/vue;
		try_files $uri $uri/ /index.html;
		#index index.html;
	}
}


[Unit]
Description=uWSGI instance to serve django-lvr
After=network.target

[Service]
User=ec2-user
Group=nginx
WorkingDirectory=/home/ec2-user/lvr/backend
Environment="PATH=/home/ec2-user/lvr/backend/venv/bin"
ExecStart=/home/ec2-user/lvr/backend/venv/bin/uwsgi --ini uwsgi.ini

[Install]
WantedBy=multi-user.target


services:

  db:
    image: nouchka/sqlite3:latest
    stdin_open: true
    tty: true
    volumes:
      - ./backend/db.sqlite3:/workdir_backend/db.sqlite3

  uwsgi:
    build: ./backend
    volumes:
      - ./backend:/workdir_backend
      # - uwsgi-socket:/tmp
    #ports:
      #- "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./local-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/staticfiles/:/staticfiles
      - ./frontend/dist/:/usr/share/nginx/html/vue
      # - uwsgi-socket:/tmp
    depends_on:
      - uwsgi
